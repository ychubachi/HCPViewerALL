#	HCPFontier Professional Edition
#	Default Command Table
# 	$Id: command.properties,v 1.10 2005/04/11 12:18:55 macchan Exp $

# Default setting
defaultCommandName=basis

# for Module
moduleCommandName=module
module=compiler.analyzer.components.HModuleCommandAnalyzer

# for Note
note=compiler.analyzer.components.HNoteCommandAnalyzer

# for Header
title=compiler.analyzer.components.header.HTitleCommandAnalyzer
author=compiler.analyzer.components.header.HAuthorCommandAnalyzer
date=compiler.analyzer.components.header.HDateCommandAnalyzer
version=compiler.analyzer.components.header.HVersionCommandAnalyzer

# for Data
data=compiler.analyzer.components.data.HBasisDataCommandAnalyzer

rdata=compiler.analyzer.components.data.HRepeatDataCommandAnalyzer
repeatdata=compiler.analyzer.components.data.HRepeatDataCommandAnalyzer

refdata=compiler.analyzer.components.data.HReferenceDataCommandAnalyzer
refrencedata=compiler.analyzer.components.data.HReferenceDataCommandAnalyzer

refeddata=compiler.analyzer.components.data.HReferedDataCommandAnalyzer
referenceddata=compiler.analyzer.components.data.HReferedDataCommandAnalyzer

selectdata=compiler.analyzer.components.data.HSelectDataCommandAnalyzer
sdata=compiler.analyzer.components.data.HSelectDataCommandAnalyzer

conddata=compiler.analyzer.components.data.HConditionDataCommandAnalyzer
conditiondata=compiler.analyzer.components.data.HConditionDataCommandAnalyzer

# for Relation of Data & Process
in=compiler.analyzer.components.extenddata.HInputDataCommandAnalyzer
out=compiler.analyzer.components.extenddata.HOutputDataCommandAnalyzer

# for Data Location Control
space=compiler.analyzer.components.data.HSpaceDataCommandAnalyzer
rev=compiler.analyzer.components.extenddata.HExtendReverseCommandAnalyzer

# for Process
basis=compiler.analyzer.components.process.HBasisCommandAnalyzer

cm=compiler.analyzer.components.process.HCallModuleCommandAnalyzer
call=compiler.analyzer.components.process.HCallModuleCommandAnalyzer
callmod=compiler.analyzer.components.process.HCallModuleCommandAnalyzer
mod=compiler.analyzer.components.process.HCallModuleCommandAnalyzer

r=compiler.analyzer.components.process.HRepeatCommandAnalyzer
repeat=compiler.analyzer.components.process.HRepeatCommandAnalyzer

ec=compiler.analyzer.components.process.HErrorCheckCommandAnalyzer
errorcheck=compiler.analyzer.components.process.HErrorCheckCommandAnalyzer

ex=compiler.analyzer.components.process.HExceptionExitCommandAnalyzer
exexit=compiler.analyzer.components.process.HExceptionExitCommandAnalyzer
exceptionalexit=compiler.analyzer.components.process.HExceptionExitCommandAnalyzer

fork=compiler.analyzer.components.process.HSelectCommandAnalyzer
f=compiler.analyzer.components.process.HSelectCommandAnalyzer
s=compiler.analyzer.components.process.HSelectCommandAnalyzer
select=compiler.analyzer.components.process.HSelectCommandAnalyzer

b=compiler.analyzer.components.process.HConditionCommandAnalyzer
branch=compiler.analyzer.components.process.HConditionCommandAnalyzer
c=compiler.analyzer.components.process.HConditionCommandAnalyzer
cond=compiler.analyzer.components.process.HConditionCommandAnalyzer

ret=compiler.analyzer.components.process.HReturnCommandAnalyzer
return=compiler.analyzer.components.process.HReturnCommandAnalyzer

